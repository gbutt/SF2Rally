<apex:page showHeader="false" sidebar="false" standardController="Case">
	<style type="text/css">
		.casetorally {
			padding: 20px;
		}
	</style>
	
	<div id="linkedArtifacts"></div>

	<div class="casetorally">
		<label for="alm_project">Project: </label>
		<select id="alm_project"></select>
		<br />

		<input id="btn_create_defect" type="button" value="Create Defect"></input>
		<input id="btn_create_userstory" type="button" value="Create User Story"></input>
	</div>


	<c:jquery />

	<script src="/soap/ajax/34.0/connection.js" type="text/javascript"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/2.1.3/mustache.js"></script>
	<apex:includeScript value="{!URLFOR($Resource.Case2Rally, '/js/almClient.js')}"></apex:includeScript>
	<apex:includeScript value="{!URLFOR($Resource.Case2Rally, '/js/sfdcClient.js')}"></apex:includeScript>

	<script type="text/javascript">	

		var sf = sfdcClient( {sessionId: '{!$Api.Session_ID}'} );
		var setupRecord = sf.fetchSetupRecord();

		var config = {
			almBaseUrl: setupRecord.rallyUrl+'/slm/webservice/v2.0/'
			,apiKey: setupRecord.apiKey
			,almHostname: setupRecord.rallyUrl

		}
		var alm = almClient(config);

		// we do the actual work here
		j$(function(){
			j$('.casetorally').hide();
			// get case id
			var caseId = '{!Case.id}';
			var workspaceOid;

			var render = function(){
				var records = sf.getLinkRecords(caseId);
				var oidToLinkIdMap = {};
				var oids = [];
				j$.each(records, function(key, val) {
					var oid = alm.parseOidFromUrl(val.ArtifactRef__c);
					oidToLinkIdMap[oid] = val.Id;
					oids.push(oid);
				});
				if (oids.length > 0){
					alm.fetchArtifacts(oids, workspaceOid, function(data){
						var template = j$('#rallyView').html();
						data.hasDefects = function(){return this.rallyDefects.length > 0;};
						data.hasStories = function(){return this.rallyStories.length > 0;};
						var addExtraInfo = function(key, val){
							val.LinkId = oidToLinkIdMap[val.ObjectID];
							val.RallyUrl = setupRecord.rallyUrl;
						};
						j$.each(data.rallyDefects, addExtraInfo);
						j$.each(data.rallyStories, addExtraInfo);
						var html = Mustache.render(template, data);
						j$('#linkedArtifacts').html(html);
					});
				} else {
					j$('#linkedArtifacts').html('No Rally associations.');
				}
			}

			// load user defaults - then load projects
			var bindCreateForm = function(userDefaults) {
				var bindProjects = function(projects) {
					j$('#alm_project').find('option').remove();
					j$.each(projects, function(key, value) {
					     var option = j$('#alm_project')
					         .append(j$("<option></option>")
					         .attr("value",value.oid)
					         .text(value.name));
					     if (userDefaults.projectOid === value.oid){
					     	j$('#alm_project').val(userDefaults.projectOid);
					     }
					});
					j$('#alm_project').trigger('bound');
				};

				alm.getAlmProjects(workspaceOid, bindProjects);
				
			}

			var removeLink = function(linkId){
				sf.deleteLinkRecord(linkId);
				render();
			}

			// TODO: use typename
			var createArtifact = function(typeName) {
				// get defect mapping
				var savedFieldMap = setupRecord[typeName + 'Map'];

				// get merge fields from case
				var caseFieldsToQuery = [];
				j$.each(savedFieldMap, function(key, value) {
					if (!value.literalValue	) {
						caseFieldsToQuery.push(value.fldValue);
					}
				});
				var caseObj = sf.fetchCaseValues(caseId,caseFieldsToQuery);

				// create rally defect object
				var rallyArtifact = {};
				j$.each(savedFieldMap, function(key, value) {
					rallyArtifact[key] = value.literalValue || caseObj[value.fldValue];
				});

				// call wsapi
				var projectOid = j$('#alm_project').val();
				alm.createArtifact(projectOid, typeName, rallyArtifact, function(response) {
					if (response.CreateResult.Errors.length>0){
						alert('failed to create rally object : ' + response.CreateResult.Errors.join('\n   '))
					} else {
						sf.createLinkRecord({Case__c : caseId, artifactRef__c: response.CreateResult.Object._ref});
						render();	
					}
					
				});
			}
			j$('#btn_create_defect').on('click', function(){createArtifact('Defect')});
			j$('#btn_create_userstory').on('click', function(){createArtifact('HierarchicalRequirement')});

			// show form
			j$('#alm_project').on('bound', function() {
				j$('.casetorally').show();
			});

			alm.getAlmWorkspaceByName(setupRecord.workspaceName, function(workspace) {
				workspaceOid = workspace.ObjectID;
				alm.getUserDefaults(bindCreateForm);
				render();
			});
			j$(document).on('click', '.disassociate', function(){
				var id = j$(this).attr('data-id');
				removeLink(id);
			})
		});
	</script>

	<script id="rallyView" type="x-tmpl-mustache">
		{{#hasStories}}
			<h2>Rally Stories:</h2>
			<table class="list">
				<tr class="headerRow">
					<th></th>
					<th>Name</th>
					<th>Owner</th>
					<th>Schedule State</th>
					<th>Discussion</th>
					<th>Attachments</th>
				</tr>
			{{#rallyStories}}
				<tr class="dataRow">
					<td class="dataCell"><a class="disassociate" data-id="{{LinkId}}" href="#">Disassociate</a></td>
					<td class="dataCell"><a target="_blank" href="{{RallyUrl}}/#/{{Project.ObjectID}}/detail/userstory/{{ObjectID}}">{{Name}}</a></td>
					<td class="dataCell">{{Owner.DisplayName}}</td>
					<td class="dataCell">{{ScheduleState}}</td>
					<td class="dataCell">{{Discussion.Count}}</td>
					<td class="dataCell">{{Attachments.Count}}</td>
				</tr>
			{{/rallyStories}}
			</table>
		{{/hasStories}}
		{{#hasDefects}}
			<h2>Rally Defects:</h2>
			<table class="list">
				<tr class="headerRow">
					<th></th>
					<th>Name</th>
					<th>Owner</th>
					<th>Schedule State</th>
					<th>State</th>
					<th>Discussion</th>
					<th>Attachments</th>
				</tr>
			{{#rallyDefects}}
				<tr class="dataRow">
					<td class="dataCell"><a class="disassociate" data-id="{{LinkId}}" href="#">Disassociate</a></td>
					<td class="dataCell"><a target="_blank" href="{{RallyUrl}}/#/{{Project.ObjectID}}/detail/defect/{{ObjectID}}">{{Name}}</a></td>
					<td class="dataCell">{{Owner.DisplayName}}</td>
					<td class="dataCell">{{ScheduleState}}</td>
					<td class="dataCell">{{State}}</td>
					<td class="dataCell">{{Discussion.Count}}</td>
					<td class="dataCell">{{Attachments.Count}}</td>
				</tr>
			{{/rallyDefects}}
			</table>
		{{/hasDefects}}
	</script>


</apex:page>